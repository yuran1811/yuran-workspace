{
  "security.allowedUNCHosts": ["wsl.localhost"],
  "security.workspace.trust.emptyWindow": true,
  "security.workspace.trust.enabled": true,
  "security.workspace.trust.startupPrompt": "once",
  "security.workspace.trust.untrustedFiles": "open",

  "window.autoDetectColorScheme": true,
  "window.commandCenter": false,
  "window.customMenuBarAltFocus": false,
  "window.newWindowDimensions": "maximized",
  "window.newWindowProfile": "Default",
  "window.openFoldersInNewWindow": "on",
  "window.restoreWindows": "preserve",
  "window.systemColorTheme": "dark",
  "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${remoteName}",
  "window.titleBarStyle": "custom",
  "window.titleSeparator": " ðŸŒ½ ",
  "window.zoomLevel": 0,

  "breadcrumbs.enabled": true,
  "breadcrumbs.symbolSortOrder": "name",

  "debug.console.closeOnEnd": true,
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.onTaskErrors": "showErrors",
  "debug.openDebug": "openOnDebugBreak",
  "debug.saveBeforeStart": "allEditorsInActiveGroup",
  "debug.terminal.clearBeforeReusing": true,
  "debug.toolBarLocation": "floating",

  "explorer.autoReveal": false,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmPasteNative": false,
  "explorer.confirmUndo": "verbose",
  "explorer.incrementalNaming": "smart",
  "explorer.openEditors.sortOrder": "alphabetical",
  "explorer.sortOrder": "type",
  "explorer.sortOrderLexicographicOptions": "lower",
  // https://github.com/antfu/vscode-file-nesting-config
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js, $(capture).d.ts, $(capture).js.flow",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.py": "$(capture).pyi",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).bbl-SAVE-ERROR, $(capture).bcf, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).nav, $(capture).out, $(capture).run.xml, $(capture).snm, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).module.css, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.w": "$(capture).*.w, I$(capture).w",
    "*.wat": "$(capture).wasm",
    "*.xaml": "$(capture).xaml.cs",
    "*test.py": "*.test.py",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "build-wrapper.log": "build-wrapper*.log, build-wrapper-dump*.json, build-wrapper-win*.exe, build-wrapper-linux*, build-wrapper-macosx*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "docker-compose*": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
    "entry.ssr.*": "entry.*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "jest.config.*": "jest.*, jest-*",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cursorrules, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, uv.lock, uv.toml, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*, todo*.md, ref*.md, *note.md",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*, todo*.md, ref*.md, *note.md",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cursorrules, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "sanity.config.*": "sanity.cli.*, sanity.types.ts, schema.json",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, react-router.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*"
  },

  "extensions.autoCheckUpdates": true,
  "extensions.autoUpdate": true,
  "extensions.ignoreRecommendations": true,

  "search.defaultViewMode": "tree",
  "search.searchOnTypeDebouncePeriod": 300,
  "search.showLineNumbers": true,
  "search.sortOrder": "fileNames",
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/__pycache__": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/dist": true,
    "**/logs": true,
    "**/out": true,
    "**/tmp": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/yarn.lock": true
  },

  "diffEditor.diffAlgorithm": "advanced",
  "diffEditor.ignoreTrimWhitespace": false,

  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll": "never",
    "source.organizeImports": "never"
  },
  "editor.semanticTokenColorCustomizations": {
    "[Rouge]": {
      "enabled": true,
      "rules": {
        "*.declaration": { "bold": true }
      }
    }
  },
  "editor.tokenColorCustomizations": {
    "[*Light*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#000"
          }
        }
      ]
    },
    "[*Dark*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#fff"
          }
        }
      ]
    },
    "textMateRules": [
      {
        "scope": ["keyword.other.dotenv"],
        "settings": {
          "foreground": "#FF000000"
        }
      },
      {
        "scope": ["keyword.operator.new", "keyword.other", "keyword.control", "storage.type", "comment.line"],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": ["comment.block", "comment.block.documentation", "comment"],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.bracketPairColorization.enabled": true,
  "editor.codeLensFontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorWidth": 2,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.definitionLinkOpensInPeek": true,
  "editor.fastScrollSensitivity": 4,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.find.loop": true,
  "editor.fontFamily": "'JetBrainsMono Nerd Font Mono', 'JetBrains Mono', 'Fira Code', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 13.5,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": false,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": "active",
  "editor.hover.sticky": true,
  "editor.inlineSuggest.enabled": true,
  "editor.insertSpaces": false,
  "editor.lineHeight": 1.65,
  "editor.lineNumbers": "interval",
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.pasteAs.enabled": true,
  "editor.renderControlCharacters": false,
  "editor.renderWhitespace": "none",
  "editor.smoothScrolling": true,
  "editor.stickyScroll.enabled": true,
  "editor.stickyTabStops": true,
  "editor.suggest.preview": true,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "editor.wordWrap": "on",

  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 500,
  "files.autoSaveWhenNoErrors": true,
  "files.hotExit": "onExitAndWindowClose",
  "files.insertFinalNewline": false,
  "files.associations": {
    "*.ejs": "html",
    ".env*": "dotenv",
    "*.cjs": "javascript",
    "*.mjs": "javascript",
    "*.css": "postcss",
    "*.scss": "postcss",
    "*.sass": "postcss",
    "*.postcss": "postcss",
    "*.nss": "csharp",
    "*.shader": "glsl",
    "*.s": "arm",
    "*.asm": "asm-intel-x86-generic",
    "*.java": "java"
  },
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/__pycache__": true
  },

  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cc]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[glsl]": {
    "editor.defaultFormatter": "raczzalan.webgl-glsl-editor"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^)\\s*($TAGS)|($TAGS)!.*)"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[markdown]": {
    "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^)\\s*($TAGS)|^//\\s*\\[x\\]|^//\\s*\\[ \\])"
  },
  "[postcss]": {
    "editor.inlayHints.enabled": "on"
  },
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "[java]": {
    "editor.defaultFormatter": "redhat.java",
    "editor.formatOnSave": true,
    "editor.formatOnType": false
  },
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    "editor.rulers": [80],
    "editor.selectionHighlight": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  "[latex]": {
    "editor.defaultFormatter": "James-Yu.latex-workshop"
  },
  "[bibtex]": {
    "editor.defaultFormatter": "James-Yu.latex-workshop"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "[snippets]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },

  "C_Cpp.clang_format_fallbackStyle": "Google",
  "C_Cpp.clang_format_path": "D:\\Program\\mingw64\\bin\\clang-format.exe",
  "C_Cpp.clang_format_sortIncludes": true,
  "C_Cpp.clang_format_style": "Google",
  "C_Cpp.codeAnalysis.clangTidy.checks.disabled": ["*"],
  "C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes": true,
  "C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation": true,
  "C_Cpp.codeAnalysis.clangTidy.enabled": true,
  "C_Cpp.codeAnalysis.clangTidy.headerFilter": null,
  "C_Cpp.codeAnalysis.clangTidy.path": "D:\\Program\\mingw64\\bin\\clang-tidy.exe",
  "C_Cpp.default.compilerPath": "D:\\Program\\mingw64\\bin\\g++.exe",
  "C_Cpp.default.cppStandard": "c++20",
  "C_Cpp.default.intelliSenseMode": "gcc-x86",
  "C_Cpp.doxygen.generatedStyle": "/**",
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.refactoring.includeHeader": "always",

  "cmake.buildBeforeRun": true,
  "cmake.configureOnOpen": false,
  "cmake.deleteBuildDirOnCleanConfigure": true,
  "cmake.launchBehavior": "breakAndReuseTerminal",
  "cmake.options.statusBarVisibility": "icon",
  "cmake.pinnedCommands": ["workbench.action.tasks.configureTaskRunner", "workbench.action.tasks.runTask"],

  "glsl-canvas.extensions": ["glsl", "frag", "vert", "fs", "vs", "EXT_shader_texture_lod"],
  "glsl-canvas.refreshOnChange": true,
  "webgl-glsl-editor.format.placeSpaceAfterKeywords": true,

  "dart.flutterHotReloadOnSave": "allIfDirty",
  "dart.hotReloadOnSave": "allIfDirty",
  "dart.openDevTools": "flutter",

  "java.autobuild.enabled": true,
  "java.edit.smartSemicolonDetection.enabled": true,
  "java.format.comments.enabled": true,
  "java.format.enabled": true,
  "java.format.onType.enabled": false,
  "java.jdt.ls.java.home": "D:\\Program\\jdk-23.0.1",
  "java.referencesCodeLens.enabled": true,
  "java.saveActions.organizeImports": true,

  "rust-analyzer.initializeStopped": true,
  "rust-analyzer.restartServerOnConfigChange": true,

  "html.autoClosingTags": true,
  "html.format.indentInnerHtml": true,
  "markdown.math.enabled": true,
  "markdown.styles": ["https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown.min.css"],
  "markdown.updateLinksOnFileMove.enabled": "always",
  "markdown.validate.enabled": true,

  "notebook.formatOnSave.enabled": true,
  "notebook.insertFinalNewline": true,
  "notebook.output.scrolling": true,
  "notebook.stickyScroll.enabled": true,
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.generateWithTypeAnnotation": true,
  "python.analysis.inlayHints.callArgumentNames": "partial",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.typeCheckingMode": "standard",
  "python.terminal.activateEnvInCurrentTerminal": true,
  "python.venvFolders": [".venv"],

  "javascript.autoClosingTags": true,
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.suggest.autoImports": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.autoClosingTags": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "always",

  "latex-workshop.bibtex-fields.sort.enabled": true,
  "latex-workshop.bibtex-format.handleDuplicates": "Comment Duplicates",
  "latex-workshop.bibtex-format.sort.enabled": true,
  "latex-workshop.bibtex-format.trailingComma": true,
  "latex-workshop.formatting.latex": "latexindent",
  "latex-workshop.hover.citation.enabled": true,
  "latex-workshop.intellisense.file.base": "both",
  "latex-workshop.intellisense.unimathsymbols.enabled": true,
  "latex-workshop.intellisense.update.delay": 750,
  "latex-workshop.latex.autoBuild.cleanAndRetry.enabled": true,
  "latex-workshop.latex.autoBuild.interval": 750,
  "latex-workshop.latex.autoBuild.run": "never",
  "latex-workshop.latex.autoClean.run": "onSucceeded",
  "latex-workshop.latex.clean.subfolder.enabled": true,
  "latex-workshop.latex.recipe.default": "lastUsed",
  "latex-workshop.latex.watch.pdf.delay": 750,
  "latex-workshop.linting.chktex.enabled": true,
  "latex-workshop.linting.chktex.exec.args": ["-wall", "-n8", "-n22", "-n30", "-e16", "-q", "-n44", "-n19", "-n36"],
  "latex-workshop.linting.lacheck.enabled": true,
  "latex-workshop.message.badbox.show": "both",
  "latex-workshop.view.pdf.zoom": "auto",
  "latex-workshop.latex.tools": [
    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%",
        "-shell-escape"
      ],
      "env": {}
    },
    {
      "name": "lualatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-lualatex",
        "-outdir=%OUTDIR%",
        "%DOC%",
        "-shell-escape"
      ],
      "env": {}
    },
    {
      "name": "xelatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-xelatex",
        "-outdir=%OUTDIR%",
        "%DOC%",
        "-shell-escape"
      ],
      "env": {}
    },
    {
      "name": "latexmk_rconly",
      "command": "latexmk",
      "args": ["%DOC%"],
      "env": {}
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": ["-synctex=1", "-interaction=nonstopmode", "-file-line-error", "%DOC%", "-shell-escape"],
      "env": {}
    },
    {
      "name": "bibtex",
      "command": "bibtex",
      "args": ["%DOCFILE%"],
      "env": {}
    },
    {
      "name": "rnw2tex",
      "command": "Rscript",
      "args": ["-e", "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"],
      "env": {}
    },
    {
      "name": "jnw2tex",
      "command": "julia",
      "args": ["-e", "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"],
      "env": {}
    },
    {
      "name": "jnw2texminted",
      "command": "julia",
      "args": ["-e", "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"],
      "env": {}
    },
    {
      "name": "pnw2tex",
      "command": "pweave",
      "args": ["-f", "tex", "%DOC_EXT%"],
      "env": {}
    },
    {
      "name": "pnw2texminted",
      "command": "pweave",
      "args": ["-f", "texminted", "%DOC_EXT%"],
      "env": {}
    },
    {
      "name": "tectonic",
      "command": "tectonic",
      "args": ["--synctex", "--keep-logs", "%DOC%.tex"],
      "env": {}
    }
  ],
  "latex-workshop.latex.recipes": [
    {
      "name": "latexmk",
      "tools": ["latexmk"]
    },
    {
      "name": "latexmk (latexmkrc)",
      "tools": ["latexmk_rconly"]
    },
    {
      "name": "latexmk (lualatex)",
      "tools": ["lualatexmk"]
    },
    {
      "name": "latexmk (xelatex)",
      "tools": ["xelatexmk"]
    },
    {
      "name": "pdflatex -> bibtex -> pdflatex * 2",
      "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"]
    },
    {
      "name": "Compile Rnw files",
      "tools": ["rnw2tex", "latexmk"]
    },
    {
      "name": "Compile Jnw files",
      "tools": ["jnw2tex", "latexmk"]
    },
    {
      "name": "Compile Pnw files",
      "tools": ["pnw2tex", "latexmk"]
    },
    {
      "name": "tectonic",
      "tools": ["tectonic"]
    }
  ],

  "prettier.enableDebugLogs": true,
  "prettier.endOfLine": "auto",
  "prettier.jsxSingleQuote": true,
  "prettier.printWidth": 120,
  "prettier.resolveGlobalModules": false,
  "prettier.singleQuote": true,
  "prettier.tabWidth": 2,
  "prettier.useTabs": false,

  "eslint.codeAction.showDocumentation": { "enable": true },
  "eslint.format.enable": true,
  "eslint.quiet": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml",
    "toml",
    "xml",
    "gql",
    "graphql",
    "astro",
    "css",
    "less",
    "scss",
    "pcss",
    "postcss"
  ],

  "postcss.validate": false,
  "tailwindCSS.classAttributes": ["class", "className"],
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.hovers": true,
  "tailwindCSS.lint.cssConflict": "warning",
  "tailwindCSS.lint.invalidApply": "warning",
  "tailwindCSS.lint.invalidScreen": "warning",
  "tailwindCSS.lint.invalidTailwindDirective": "warning",
  "tailwindCSS.lint.invalidVariant": "warning",
  "tailwindCSS.suggestions": true,
  "tailwindCSS.includeLanguages": {
    "postcss": "css"
  },

  "git.autofetch": true,
  "git.autoStash": true,
  "git.branchSortOrder": "alphabetically",
  "git.confirmSync": false,
  "git.decorations.enabled": true,
  "git.enableSmartCommit": true,
  "git.openRepositoryInParentFolders": "never",
  "git.untrackedChanges": "separate",
  "git.blame.editorDecoration.enabled": true,
  "git.branchWhitespaceChar": "-",
  "git.terminalGitEditor": true,
  "git.enableCommitSigning": true,

  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.scopeSelection": true,
  "github.copilot.editor.enableAutoCompletions": true,
  // "github.copilot.nextEditSuggestions.enabled": false,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "yaml": false,
    "xml": false
  },

  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },

  "emmet.includeLanguages": { "postcss": "css", "typescriptreact": "html" },
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
  "emmet.useInlineCompletions": true,
  "reactSnippets.settings.languageScopes": "typescript,typescriptreact,javascript,javascriptreact",
  "reactSnippets.settings.prettierEnabled": false,
  "reactSnippets.settings.typescript": true,
  "reactSnippets.settings.typescriptPropsStatePrefix": "interface",

  "quokka.compactMessageOutput": true,
  "quokka.startViewStatusBar": true,
  "quokka.syncSettings": true,
  "tabnine.debounceMilliseconds": 3,
  "tabnine.experimentalAutoImports": true,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  "roo-cline.allowedCommands": ["npm test", "npm install", "tsc", "git log", "git diff", "git show"],

  "bookmarks.saveBookmarksInProject": true,
  "color-highlight.matchRgbWithNoFunction": false,
  "color-highlight.matchWords": false,
  "console-flash.double-quotes": false,
  "console-flash.semi-colon": false,
  "dotenv.cloakColor": "#fff",
  "dotenv.cloakIcon": ".",
  "dotenv.enableAutocloaking": false,
  "dotenv.enableSecretpeeking": true,
  "importCost.fontStyle": "italic",
  "importCost.showCalculatingDecoration": false,
  "importCost.timeout": 10000,
  "prisma.enableCodeLens": true,
  "prisma.fileWatcher": true,
  "smartClicks.htmlLanguageIds": ["html", "vue", "svelte"],
  "smartClicks.rules": { "dash": false },

  "better-comments.highlightPlainText": true,
  "better-comments.multilineComments": true,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#555665",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": true
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": true
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": true,
      "italic": false
    }
  ],

  "todo-tree.general.showActivityBarBadge": true,
  "todo-tree.general.tags": ["TODO", "FIXME", "FIXIT", "FIX", "SEE", "LOOK", "[x]", "[ ]", "WARN"],
  "todo-tree.highlights.enabled": true,
  "todo-tree.tree.showBadges": true,
  "todo-tree.general.tagGroups": {
    "FIXME": ["FIXME", "FIXIT", "FIX"],
    "TODO": ["TODO"],
    "SEE": ["SEE", "LOOK"],
    "WARN": ["WARN"]
  },
  "todo-tree.highlights.defaultHighlight": {
    "type": "line",
    "icon": "alert",
    "gutterIcon": true,
    "fontWeight": "500",
    "foreground": "#ffd0d0",
    "background": "#ffffff00",
    "iconColour": "#FABD2F"
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "goal",
      "iconColour": "#52a7e7",
      "foreground": "#52a7e7",
      "background": "#0e3a5b"
    },
    "FIXME": {
      "icon": "alert",
      "iconColour": "#FABD2F",
      "foreground": "#ff5e4c",
      "background": "#6e1919"
    },
    "SEE": {
      "icon": "eye",
      "iconColour": "#52a7e7",
      "foreground": "#52a7e7",
      "background": "#0e3a5b"
    },
    "[x]": {
      "icon": "issue-closed",
      "iconColour": "#92ff4f",
      "foreground": "#92ff4f",
      "background": "#007200"
    },
    "[ ]": {
      "icon": "x-circle",
      "iconColour": "#ff5e4c",
      "foreground": "#3e2e0c",
      "background": "#FABD2F"
    }
  },
  "todo-tree.filtering.excludeGlobs": [
    "**/vendor/**",
    "**/node_modules/**",
    "**/dist/**",
    "**/bower_components/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map"
  ],

  "catppuccin-icons.hidesExplorerArrows": true,
  "material-icon-theme.activeIconPack": "react_redux",
  "material-icon-theme.hidesExplorerArrows": true,
  "material-icon-theme.saturation": 0.8,
  "oneDarkPro.bold": true,
  "oneDarkPro.editorTheme": "One Dark Pro Flat",
  "oneDarkPro.italic": true,
  "oneDarkPro.markdownStyle": true,
  "oneDarkPro.vivid": true,
  "vscode_custom_css.imports": ["file:///D:/Program/vscode/style.css"],
  "vsicons.presets.hideExplorerArrows": true,
  "vsicons.presets.jsOfficial": true,
  "vsicons.presets.tsOfficial": true,

  "terminal.integrated.altClickMovesCursor": true,
  "terminal.integrated.cursorBlinking": false,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font Mono', 'FiraCode Nerd Font', 'JetBrains Mono', 'Fira Code', 'Consolas', 'Courier New', monospace",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.profiles.windows": {
    "JavaScript Debug Terminal": null,
    "PowerShell": null
  },
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.history": 150,
  "terminal.integrated.smoothScrolling": false,
  "terminal.integrated.stickyScroll.enabled": true,

  // https://glitchbone.github.io/vscode-base16-term/#/__theme__
  // preferred-theme: [gruvbox-dark-soft , tomorrow-night]
  "workbench.colorCustomizations": {
    "terminal.ansiBlack": "#1D1F21",
    "terminal.ansiBlue": "#81A2BE",
    "terminal.ansiBrightBlack": "#969896",
    "terminal.ansiBrightBlue": "#81A2BE",
    "terminal.ansiBrightCyan": "#8ABEB7",
    "terminal.ansiBrightGreen": "#B5BD68",
    "terminal.ansiBrightMagenta": "#B294BB",
    "terminal.ansiBrightRed": "#CC6666",
    "terminal.ansiBrightWhite": "#FFFFFF",
    "terminal.ansiBrightYellow": "#F0C674",
    "terminal.ansiCyan": "#8ABEB7",
    "terminal.ansiGreen": "#B5BD68",
    "terminal.ansiMagenta": "#B294BB",
    "terminal.ansiRed": "#CC6666",
    "terminal.ansiWhite": "#d1d1d1",
    "terminal.ansiYellow": "#F0C674",

    "terminal.foreground": "#d1d1d1",
    "terminalCursor.background": "#d1d1d1",
    "terminalCursor.foreground": "#d1d1d1"
  },
  "workbench.activityBar.location": "top",
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.enablePreview": false,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.scrollToSwitchTabs": true,
  "workbench.editor.tabActionLocation": "left",
  "workbench.editor.wrapTabs": false,
  "workbench.editorAssociations": { "*.pdf": "latex-workshop-pdf-hook" },
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "none",
  "workbench.tree.enableStickyScroll": true,

  "workbench.iconTheme": "material-icon-theme",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.colorTheme": "One Dark Pro Darker",
  "workbench.preferredDarkColorTheme": "One Dark Pro Darker",
  "workbench.preferredLightColorTheme": "Solarized Light"
}
